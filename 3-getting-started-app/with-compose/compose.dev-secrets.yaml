version: '3.8'

services:
  app:
    image: public.ecr.aws/docker/library/node:20.18.0-bookworm-slim
    container_name: todo-app
    ports:
      - "127.0.0.1:${APP_PORT}:3000"
    working_dir: /app
    volumes:
      - ./:/app
    environment:
      MYSQL_HOST: mysql
      MYSQL_DB_FILE: /run/secrets/todo_db_name
      MYSQL_PASSWORD_FILE: /run/secrets/todo_db_password
      MYSQL_USER_FILE: /run/secrets/todo_db_user
    secrets:
      - todo_db_name
      - todo_db_password
      - todo_db_user
    command: sh -c "yarn install && yarn run dev"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - todo-network

  mysql:
    image: mysql:8.4
    container_name: mysql
    hostname: mysql
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/todo_mysql_root_password
      MYSQL_DATABASE_FILE: /run/secrets/todo_db_name
      MYSQL_USER_FILE: /run/secrets/todo_db_user
      MYSQL_PASSWORD_FILE: /run/secrets/todo_db_password
    secrets:
      - todo_db_host
      - todo_db_name
      - todo_db_password
      - todo_mysql_root_password
      - todo_db_user
    volumes:
      - todo-mysql-data:/var/lib/mysql
    networks:
      - todo-network
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

volumes:
  todo-mysql-data:

networks:  
  todo-network:
    name: todo-network # specific network name (better naming and management...)

# /!\ we need to create external secrets separately 
# /!\ docker compose doesnt support external secrets
#     we need to use docker stack to handle them
secrets:
  todo_mysql_root_password:
    external: true 
  todo_db_host:
    external: true 
  todo_db_name:
    external: true
  todo_db_password:
    external: true
  todo_db_user:
    external: true